def func1(arg1, arg2):
    var26 = func2(arg1, arg2)
    def func3(arg27, arg28):
        var29 = 388252186 - arg27
        var30 = (-708 - arg27 & var29) ^ arg28
        var31 = var29 + ((var29 - arg1 & arg28) - var30 + var30)
        result = var30 | var30
        return result
    var32 = func3(arg2, arg1)
    if arg1 < var26:
        var37 = class4()
    else:
        var37 = class6()
    for var38 in xrange(25):
        var39 = var37.func5
        var39(var26, var38)
    def func8(arg40, arg41):
        var42 = arg2 & 1606903725
        var43 = ((var26 + arg40) ^ 539) ^ var32
        var44 = (arg1 + -844 + arg2) ^ -402178570
        var45 = var42 + (var32 + 575)
        var46 = var43 - arg2 & var26 & var45
        var47 = arg2 | var42
        var48 = arg2 - arg40 | var44
        if var42 < var42:
            var49 = -1090449838 - var45
        else:
            var49 = var46 ^ (16 + (var46 & arg41))
        var50 = (arg2 & var46) + var45 ^ var32
        var51 = var47 - ((var45 + var32) | var42)
        var52 = (-1562097530 ^ var51) + var26 | var26
        var53 = var48 + var43 ^ var46 | var43
        var54 = arg41 + var44
        var55 = var48 | arg41 | 160265427 | var51
        var56 = arg1 - arg1
        var57 = (var32 + arg2) & arg41 ^ arg40
        var58 = var45 ^ var48
        result = var53 ^ var43
        return result
    var59 = func8(arg1, arg2)
    if var59 < arg2:
        var64 = class9()
    else:
        var64 = class11()
    for var65 in xrange(15):
        var66 = var64.func10
        var66(var26, var32)
    var67 = arg1 & -463 ^ (var32 | arg2) - (var26 - arg2) - var59 - (arg1 & arg2) & (61 + (var26 + (var32 & (var59 | var32) - 332263161) ^ var32) & -355 + arg2)
    result = var59 + var59
    return result
class class11(object):
    def func10(self, arg62, arg63):
        result = arg62 ^ 1005009691
        return result
class class9(object):
    def func10(self, arg60, arg61):
        result = arg61 | (arg60 ^ ((-1 + arg60) ^ 911377248)) + arg60
        return result
class class6(object):
    def func5(self, arg35, arg36):
        result = (arg36 ^ -1) ^ -78084042 ^ (arg36 - arg35 ^ arg35 | 671788379)
        return result
class class4(object):
    def func5(self, arg33, arg34):
        result = (1636992991 + ((arg33 & -2039711448) - arg34 | 1) - arg33) & arg33
        return result
def func2(arg3, arg4):
    var5 = ((-734 | -1985588852) - arg4) | arg3
    var6 = (var5 + arg4) ^ -795 | arg4
    var7 = (arg3 | -990) & (var6 - var5)
    var8 = arg4 + var7 & arg4 + var7
    var9 = var7 & -993
    var10 = (var5 | 122 & -2014356012) - var6
    if var9 < arg3:
        var11 = (var5 & var7 | var8) ^ var10
    else:
        var11 = arg3 ^ var8
    var12 = 1452010596 - var8 + arg3 & 2010979706
    var13 = -125 - var12 + (var9 - var6)
    var14 = var10 ^ ((var13 + var5) ^ arg4)
    var15 = var10 ^ var9
    var16 = var5 ^ -836 | var9 + var13
    var17 = (var8 | var15) | var5 - -565
    if arg4 < var16:
        var18 = var8 + var17 & var8 & var13
    else:
        var18 = var13 - (1794647342 - var15 + var8)
    var19 = arg3 | var14
    var20 = 843 + var19
    var21 = var8 - var17
    var22 = 578 | arg3
    var23 = (var9 ^ var12) + var20
    var24 = var15 ^ ((var14 + var14) + var22)
    var25 = (var15 & var12 + var23) - var22
    result = var19 ^ var22 - ((var6 | (var6 - -95730409 & var19)) & arg3 | var24)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 13'
    print 'arg_number: 68'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
